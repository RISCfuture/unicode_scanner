{"name":"Unicode Scanner","body":"Unicode String Scanner\r\n======================\r\n\r\nA Unicode-aware implementation of Ruby's `StringScanner`.\r\n\r\n|             |                                 |\r\n|:------------|:--------------------------------|\r\n| **Author**  | Tim Morgan                      |\r\n| **Version** | 1.0 (Jul 11, 2012)              |\r\n| **License** | Released under the MIT license. |\r\n\r\nAbout\r\n-----\r\n\r\nDid you know that `StringScanner` splits codepoints? Neither did I. This one\r\ndoesn't.\r\n\r\n**When would I want to use this?** When you want to use `StringScanner` on a\r\nUnicode (UTF-_n_) string.\r\n\r\n**When would I _not_ want to use this?** If you're interested in speed. This is\r\nslower than StringScanner because a) it's not written in native C, and b) it's\r\nslower to traverse Unicode strings anyway because characters can have varying\r\nbyte sizes.\r\n\r\nInstallation\r\n------------\r\n\r\nSimply add this gem to your project's `Gemfile`:\r\n\r\n```` ruby\r\ngem 'unicode_scanner'\r\n````\r\n\r\nUsage\r\n-----\r\n\r\nThe `UnicodeScanner` object responds to exactly the same API as\r\n[StringScanner](http://ruby-doc.org/stdlib-1.9.3/libdoc/strscan/rdoc/StringScanner.html),\r\nwith the exception of the following methods:\r\n\r\n* `getbyte`\r\n* any obsolete methods\r\n\r\nFor more information, see the {UnicodeScanner} class documentation.\r\n","google":"","tagline":"Unicode-aware StringScanner implementation","note":"Don't delete this file! It's used internally to help with page regeneration."}